package com.wl.util;
import java.util.HashMap;
import java.util.LinkedHashMap;

import com.wl.instamer.model.TagDetails;



public class TLVParser {

	public static void main(String[] args) {
		
		String tagString="000201010211021647250000000061930415526550000000619061661000900000061940826YESB000094123648273648222226440010A0000005240126MAB0450941A0000004@Yesbank27260010A00000052401081120034A5204701153033565802IN5908Mani SS16009PERAURANI6106123456621207081120034A63046c26";
		//String tagString = "000201010211021640697610004838560415535322000048385061661001600004838730823ABDC006500520000004457226430010A0000005240125IBL.000022581121700@indus27490010A000000524013100002258112170061001600004838735204541153033565802IN5912Sufiyan Khan6006MUMBAI6106562125621207080004838763041963";
		//String tagString="000201010211021646049010032879360415512260000328793061661000200032879540826UTIB000000211111111111111126460010A0000005240128MAB.037022000021800@AXISBANK27490010A000000524013103702200002180061000200032879545204729953033565802IN5921PHI-COMMERCE TEST MID6006MUMBAI6106400025621207080032879563042B46";
		//String tagString="000201010212021646049010028655670415512260000286556061661000200028655860826UTBI000000211111111111111126380010A0000005240120037022000021100@axis27530010A00000052401357332153230779631455432154321543215428300010A0000005240112123456789123520454115303356540125802IN5918SIGNCATCH TEST MID6006MUMBAI61064000256255051873321532307796314506175432154321543215407082737237763045281";
		//String tagString = "000201010211021646049010033714090415512260000337139061661000200033714020826UTIB000012091702007240787426460010A0000005240128MAB.037011000075937@AXISBANK27490010A000000524013103701100007593761000200033714025204939953033565802IN5913Palika Bhawan6005DELHI610611000162120708003371406304F51C";
		//String tagString="000201010211021640173610000116590415512319000001165061661004800000116760827KOT01254785547894120165787426280010A0000005240110TEST@KOTAK27490010A000000524013107905606788014961004800000116765204421553033565802IN5915GSK Enterprises6006MUMBAI610632141462120708000011676304A8CE";
		//String tagString="000201010212021646049010028655670415512260000286556061661000200028655860826UTBI000000211111111111111126460010A0000005240128MAB.037022000021100@AXISBANK27530010A0000005240135810318285064015214abcdefghijkscscsc28300010A000000524011212345678912352045411530335654041.005802IN5918SIGNCATCH TEST MID6006MUMBAI6106400025625505188103182850640152140617abcdefghijkscscsc0708273723776304D153";
		//String tagString="000201010211021646049010028711280415512260000287112061661000200028711470826UTIB0SJSD0101210010001077126420010A0000005240124mab.037122000040055@axis27730010A000000524013103712200004005561000200028711470220https://www.axis.com28300010A000000524011212345567741152041111530335655020256031005802IN5911TUSHAR PSTN6006MUMBAI61064000726212070800287114630455DB";
		//String tagString = "000201010212021646049010034988970415512260000349889061661000200034989160826UTIB000000211111111111111126460010A0000005240128MAB.037022000022100@AXISBANK27360010A000000524011881581153319334415028300010A000000524011212121212121252047298530335654041.005802IN5923Aarti Rao - GPRS_QR-VX66006MUMBAI610640002562340518815811533193344150070829376734630401D8";
		//String tagString = "000201010211021645471910018608490415529812000183622061661004400018362400828SBIN00160900000003596859536226540010A0000005240136wsbimab.075141609000015-12345678@sbi27490010A000000524013107514160900001561004400018362405204764153033565802IN5913FURNITURE HUB6006RANCHI6106834008621207080018362463041885";
		
		
		
		//String tagString="000201010211021640173610000101800415512319000001018061661004800000102070837877878787877897987987987979797987987926290010A0000005240111atos1@kotak7490010A000000524013107905601122036261004800000102075204152053033565802IN5912ONEMIDTWOTID6006MUMBAI6106400213621207080000102063049890";
		
		
		String tagIdsWithSubTag="26,27,28,62";//comma separated list of Tags which are having SubTags
		HashMap<String,TagDetails> tagDetailsMap = TLVParser.tlvParser(tagString,tagIdsWithSubTag);
		System.out.println(tagDetailsMap.get("27").getSubTagDetailsMap().get("01").getTagVal());
		//Print n check output
		for (String key : tagDetailsMap.keySet()) {
			TagDetails  tagDetails= tagDetailsMap.get(key);
			System.out.print(tagDetails.getTagId()+"\t"+tagDetails.getTagVal()+"\t"+tagDetails.getSubTagYN());
			if(tagDetails.getSubTagYN()!=null && tagDetails.getSubTagYN().equalsIgnoreCase("Y") && tagDetails.getSubTagDetailsMap()!=null && tagDetails.getSubTagDetailsMap().size()>0)
			{
				for(String keySubTag : tagDetails.getSubTagDetailsMap().keySet())
				{
					TagDetails  subTagDetails= tagDetails.getSubTagDetailsMap().get(keySubTag);
					System.out.print("\t"+subTagDetails.getTagId()+"\t"+subTagDetails.getTagVal()+"\t"+subTagDetails.getSubTagYN());
				}
			}
			System.out.println();
		}
	}

	/***
	 * 
	 * @param tagString
	 * @param tagIdsWithSubTag Comma seprated String of TagIDs which are having subtags
	 * @return HashMap<String,TagDetails> of String,TagDetails in which String is TagId and TagDetails contains TagId and value and Subtag Details if any in same format
	 */
	public static HashMap<String,TagDetails> tlvParser(String tagString,String tagIdsWithSubTag)
	{
		HashMap<String,TagDetails> tagDetailsMap = new LinkedHashMap<String,TagDetails>();
		StringBuilder tagId = new StringBuilder();
		StringBuilder tagLength = new StringBuilder();
		StringBuilder tagValue = new StringBuilder();

		int i= tagString.length();
		int tagLengthInt=0;
		int frontCounter=0;

		while(i!=0)
		{
			//TagID
			tagId = tagId.append(tagString.substring(frontCounter, frontCounter+2));
			frontCounter=frontCounter+2;
			//Tag Length
			tagLength = tagLength.append(tagString.substring(frontCounter, frontCounter+2));
			frontCounter=frontCounter+2;
			tagLengthInt=Integer.parseInt(tagLength.toString());
			//Tag Value
			tagValue = tagValue.append(tagString.substring(frontCounter,frontCounter+tagLengthInt));
			frontCounter=frontCounter+tagLengthInt;

			//Tag Details
			TagDetails tagDetails = new TagDetails();
			tagDetails.setTagId(tagId.toString());
			tagDetails.setTagVal(tagValue.toString());
			//SubTag check
			if(tagIdsWithSubTag.contains(tagId))
			{
				tagDetails.setSubTagYN("Y");
				HashMap<String,TagDetails> subTagDetails = tlvParser(tagDetails.getTagVal(),tagIdsWithSubTag);
				tagDetails.setSubTagDetailsMap(subTagDetails);
			}else{
				tagDetails.setSubTagYN("N");
			}

			tagDetailsMap.put(tagId.toString(), tagDetails);
			i=i-4-tagLengthInt;	
			tagId.setLength(0);
			tagLength.setLength(0);
			tagValue.setLength(0);
		}
		return tagDetailsMap;
	}

}
